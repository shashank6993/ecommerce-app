generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id
  email     String     @unique
  name      String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  carts     Cart[]
  purchases Purchase[]
  addresses Address[]
}

model Product {
  id            String         @id @default(uuid())
  name          String         @unique
  description   String
  price         Float
  image         String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  carts         Cart[]
  purchaseItems PurchaseItem[]
}

model Cart {
  id        String   @id @default(uuid())
  userId    String
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Purchase {
  id        String         @id @default(uuid())
  userId    String
  total     Float
  status    String         @default("pending")
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  user      User           @relation(fields: [userId], references: [id])
  invoice   Invoice?
  addressId String?
  address   Address?       @relation(fields: [addressId], references: [id])
  items     PurchaseItem[]
}

model Address {
  id        String     @id @default(uuid())
  userId    String
  street    String
  city      String
  state     String
  zip       String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  purchases Purchase[]
}

model Invoice {
  id         String   @id @default(uuid())
  purchaseId String   @unique
  details    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  purchase   Purchase @relation(fields: [purchaseId], references: [id])
}

model PurchaseItem {
  id         String   @id @default(uuid())
  purchaseId String
  productId  String
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  purchase   Purchase @relation(fields: [purchaseId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
}
